{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/mosesmayer/Desktop/Harvard/Summer 2020/Personal-Projects/Contact Tracing/contact-tracing-front/node_modules/react-native-pie-chart/src/Pie.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ART } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport PropTypes from 'prop-types';\nvar Surface = ART.Surface,\n    Group = ART.Group,\n    Path = ART.Path,\n    Shape = ART.Shape;\nimport Wedge from \"./Wedge\";\n\nvar Pie = function (_Component) {\n  _inherits(Pie, _Component);\n\n  var _super = _createSuper(Pie);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Pie, [{\n    key: \"getRadius\",\n    value: function getRadius() {\n      return this.props.chart_wh / 2;\n    }\n  }, {\n    key: \"handleCover\",\n    value: function handleCover() {\n      if (!this.props.doughnut) return;\n      var radius = this.getRadius();\n      var coverRadius = this.props.chart_wh * this.props.coverRadius;\n      var coverPath = new Path().moveTo(radius, radius - coverRadius / 2).arc(0, coverRadius, 25).arc(0, -coverRadius, 25).close();\n      return React.createElement(Shape, {\n        d: coverPath,\n        fill: this.props.coverFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var radius = this.getRadius();\n      var rotation = Platform.OS === 'ios' ? 0 : -90;\n      return React.createElement(Surface, {\n        style: this.props.style,\n        width: this.props.chart_wh,\n        height: this.props.chart_wh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(Group, {\n        rotation: rotation,\n        originX: radius,\n        originY: radius,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, Object.keys(this.props.series).map(function (key) {\n        if (_this.props.angle[key] != _this.props.angle[parseInt(key) + 1]) {\n          return React.createElement(Wedge, {\n            key: key,\n            outerRadius: _this.getRadius(),\n            startAngle: _this.props.angle[key],\n            endAngle: _this.props.angle[parseInt(key) + 1],\n            fill: _this.props.sliceColor[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }\n          });\n        }\n      }), this.handleCover()));\n    }\n  }]);\n\n  return Pie;\n}(Component);\n\nPie.propTypes = {\n  angle: PropTypes.array.isRequired,\n  chart_wh: PropTypes.number.isRequired,\n  coverFill: PropTypes.string.isRequired,\n  coverRadius: PropTypes.number.isRequired,\n  doughnut: PropTypes.bool.isRequired,\n  series: PropTypes.array.isRequired,\n  sliceColor: PropTypes.array.isRequired,\n  style: ViewPropTypes.style\n};\nexport default Pie;","map":{"version":3,"sources":["/Users/mosesmayer/Desktop/Harvard/Summer 2020/Personal-Projects/Contact Tracing/contact-tracing-front/node_modules/react-native-pie-chart/src/Pie.js"],"names":["React","Component","ART","PropTypes","Surface","Group","Path","Shape","Wedge","Pie","props","chart_wh","doughnut","radius","getRadius","coverRadius","coverPath","moveTo","arc","close","coverFill","rotation","Platform","OS","style","Object","keys","series","map","key","angle","parseInt","sliceColor","handleCover","propTypes","array","isRequired","number","string","bool","ViewPropTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Platform, ART, View, ViewPropTypes } from 'react-native';\nimport PropTypes from 'prop-types';\nconst { Surface, Group, Path, Shape } = ART;\nimport Wedge from './Wedge';\n\nclass Pie extends Component {\n  getRadius(){\n    return this.props.chart_wh / 2;\n  }\n  handleCover(){\n    if (!this.props.doughnut) return;\n    const radius = this.getRadius();\n    const coverRadius = this.props.chart_wh * this.props.coverRadius;\n    const coverPath = new Path()\n      .moveTo(radius, radius - (coverRadius / 2))\n      .arc(0, coverRadius, 25)\n      .arc(0, -coverRadius, 25)\n      .close();\n    return <Shape d={coverPath} fill={this.props.coverFill}/>;\n  }\n  render() {\n    const radius = this.getRadius();\n    const rotation = Platform.OS === 'ios' ? 0 : -90;\n    return (\n      <Surface style={this.props.style} width={this.props.chart_wh} height={this.props.chart_wh}>\n        <Group rotation={rotation} originX={radius} originY={radius}>\n          {Object.keys(this.props.series).map((key)=>{\n            if (this.props.angle[key] != this.props.angle[parseInt(key)+1]) {\n              return (\n                <Wedge\n                  key={key}\n                  outerRadius={this.getRadius()}\n                  startAngle={this.props.angle[key]}\n                  endAngle={this.props.angle[parseInt(key)+1]}\n                  fill={this.props.sliceColor[key]}\n                />\n              );\n            }\n          })}\n          {this.handleCover()}\n        </Group>\n      </Surface>\n    );\n  }\n}\n\nPie.propTypes = {\n  angle: PropTypes.array.isRequired,\n  chart_wh: PropTypes.number.isRequired,\n  coverFill: PropTypes.string.isRequired,\n  coverRadius: PropTypes.number.isRequired,\n  doughnut: PropTypes.bool.isRequired,\n  series: PropTypes.array.isRequired,\n  sliceColor: PropTypes.array.isRequired,\n  style: ViewPropTypes.style,\n};\n\nexport default Pie;\n"]},"metadata":{},"sourceType":"module"}