{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/mosesmayer/Desktop/Harvard/Summer 2020/Personal-Projects/Contact Tracing/contact-tracing-front/node_modules/react-native-pie-chart/src/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport PropTypes from 'prop-types';\nimport Pie from \"./Pie.js\";\n\nvar PieChart = function (_Component) {\n  _inherits(PieChart, _Component);\n\n  var _super = _createSuper(PieChart);\n\n  function PieChart() {\n    _classCallCheck(this, PieChart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PieChart, [{\n    key: \"handleAngle\",\n    value: function handleAngle() {\n      var series = this.props.series;\n      var sum = series.reduce(function (previous, current) {\n        return previous + current;\n      }, 0);\n      var angle = series.reduce(function (previous, current, index) {\n        if (index == series.length - 1) {\n          return previous.concat(360);\n        } else {\n          return previous.concat(previous[previous.length - 1] + Math.round(360 * current / sum));\n        }\n      }, [0]);\n      return angle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Pie, _extends({}, this.props, {\n        angle: this.handleAngle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return PieChart;\n}(Component);\n\nPieChart.propTypes = {\n  chart_wh: PropTypes.number.isRequired,\n  coverFill: PropTypes.string,\n  coverRadius: PropTypes.number,\n  doughnut: PropTypes.bool,\n  series: PropTypes.array.isRequired,\n  sliceColor: PropTypes.array.isRequired,\n  style: ViewPropTypes.style\n};\nPieChart.defaultProps = {\n  coverFill: '#FFF',\n  coverRadius: 0.6,\n  doughnut: false,\n  style: {}\n};\nexport default PieChart;","map":{"version":3,"sources":["/Users/mosesmayer/Desktop/Harvard/Summer 2020/Personal-Projects/Contact Tracing/contact-tracing-front/node_modules/react-native-pie-chart/src/index.js"],"names":["React","Component","PropTypes","Pie","PieChart","series","props","sum","reduce","previous","current","angle","index","length","concat","Math","round","handleAngle","propTypes","chart_wh","number","isRequired","coverFill","string","coverRadius","doughnut","bool","array","sliceColor","style","ViewPropTypes","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP;;IAEMC,Q;;;;;;;;;;;;;kCACS;AACX,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAA1B;AACA,UAAME,GAAG,GAAGF,MAAM,CAACG,MAAP,CAAc,UAACC,QAAD,EAAWC,OAAX,EAAuB;AAAC,eAAOD,QAAQ,GAAGC,OAAlB;AAA2B,OAAjE,EAAmE,CAAnE,CAAZ;AACA,UAAMC,KAAK,GAAGN,MAAM,CAACG,MAAP,CAAc,UAACC,QAAD,EAAWC,OAAX,EAAoBE,KAApB,EAA8B;AACxD,YAAIA,KAAK,IAAKP,MAAM,CAACQ,MAAP,GAAgB,CAA9B,EAAkC;AAChC,iBAAOJ,QAAQ,CAACK,MAAT,CAAgB,GAAhB,CAAP;AACD,SAFD,MAEO;AACL,iBAAOL,QAAQ,CAACK,MAAT,CAAgBL,QAAQ,CAACA,QAAQ,CAACI,MAAT,GAAkB,CAAnB,CAAR,GAAgCE,IAAI,CAACC,KAAL,CAAW,MAAMN,OAAN,GAAcH,GAAzB,CAAhD,CAAP;AACD;AACF,OANa,EAMX,CAAC,CAAD,CANW,CAAd;AAOA,aAAOI,KAAP;AACD;;;6BACQ;AACP,aACE,oBAAC,GAAD,eACM,KAAKL,KADX;AAEE,QAAA,KAAK,EAAE,KAAKW,WAAL,EAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAMD;;;;EApBoBhB,S;;AAuBvBG,QAAQ,CAACc,SAAT,GAAqB;AACnBC,EAAAA,QAAQ,EAAEjB,SAAS,CAACkB,MAAV,CAAiBC,UADR;AAEnBC,EAAAA,SAAS,EAAEpB,SAAS,CAACqB,MAFF;AAGnBC,EAAAA,WAAW,EAAEtB,SAAS,CAACkB,MAHJ;AAInBK,EAAAA,QAAQ,EAAEvB,SAAS,CAACwB,IAJD;AAKnBrB,EAAAA,MAAM,EAAEH,SAAS,CAACyB,KAAV,CAAgBN,UALL;AAMnBO,EAAAA,UAAU,EAAE1B,SAAS,CAACyB,KAAV,CAAgBN,UANT;AAOnBQ,EAAAA,KAAK,EAAEC,aAAa,CAACD;AAPF,CAArB;AAUAzB,QAAQ,CAAC2B,YAAT,GAAwB;AACtBT,EAAAA,SAAS,EAAE,MADW;AAEtBE,EAAAA,WAAW,EAAE,GAFS;AAGtBC,EAAAA,QAAQ,EAAE,KAHY;AAItBI,EAAAA,KAAK,EAAE;AAJe,CAAxB;AAOA,eAAezB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { View, ViewPropTypes } from 'react-native';\nimport PropTypes from 'prop-types';\nimport Pie from './Pie.js';\n\nclass PieChart extends Component {\n  handleAngle(){\n    const series = this.props.series;\n    const sum = series.reduce((previous, current) => {return previous + current;}, 0);\n    const angle = series.reduce((previous, current, index) => {\n      if (index == (series.length - 1)) {\n        return previous.concat(360);\n      } else {\n        return previous.concat(previous[previous.length - 1] + Math.round(360 * current/sum));\n      }\n    }, [0]);\n    return angle;\n  }\n  render() {\n    return (\n      <Pie\n        {...this.props}\n        angle={this.handleAngle()}\n      />\n    );\n  }\n}\n\nPieChart.propTypes = {\n  chart_wh: PropTypes.number.isRequired,\n  coverFill: PropTypes.string,\n  coverRadius: PropTypes.number,\n  doughnut: PropTypes.bool,\n  series: PropTypes.array.isRequired,\n  sliceColor: PropTypes.array.isRequired,\n  style: ViewPropTypes.style,\n};\n\nPieChart.defaultProps = {\n  coverFill: '#FFF',\n  coverRadius: 0.6,\n  doughnut: false,\n  style: {}\n};\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}